}
for (j in 1:nrow(data7)) {
tuple0 = data7[j, c(4:6, 58, 33)]
tuple1 = rep(NA, 3)
# sort according to GW, home = team, away = opp team
if(tuple0$was_home == T){
tuple1 = tuple0[c(1:3, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Away.Team == as.character(tuple1[3]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index, "Home.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
g = c(tuple1[4])
print(as.character(games$Date))
print(g[1])
print(j)
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello H")
data7[j, "team_name"] = data8[game, "Home.Team"]
print("World H")
# DGWH = rbind(DGWH, data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
}
}
# sort according to GW, home = opp team, away = team
else{
tuple1 = tuple0[c(1, 3, 2, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Home.Team == as.character(tuple1[2]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index,  "Away.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello A")
data7[j, "team_name"] = data8[game,  "Away.Team"]
print("World A")
# DGWA = rbind(DGWA,  data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
break
}
}
}
for (j in 1:nrow(data7)) {
tuple0 = data7[j, c(4:6, 58, 33)]
tuple1 = rep(NA, 3)
# sort according to GW, home = team, away = opp team
if(tuple0$was_home == T){
tuple1 = tuple0[c(1:3, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Away.Team == as.character(tuple1[3]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index, "Home.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
g = as.character(tuple1[4])
print(as.character(games$Date))
print(j)
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello H")
data7[j, "team_name"] = data8[game, "Home.Team"]
print("World H")
# DGWH = rbind(DGWH, data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
}
}
# sort according to GW, home = opp team, away = team
else{
tuple1 = tuple0[c(1, 3, 2, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Home.Team == as.character(tuple1[2]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index,  "Away.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello A")
data7[j, "team_name"] = data8[game,  "Away.Team"]
print("World A")
# DGWA = rbind(DGWA,  data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
break
}
}
}
for (j in 1:nrow(data7)) {
tuple0 = data7[j, c(4:6, 58, 33)]
tuple1 = rep(NA, 3)
# sort according to GW, home = team, away = opp team
if(tuple0$was_home == T){
tuple1 = tuple0[c(1:3, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Away.Team == as.character(tuple1[3]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index, "Home.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
g = as.character(tuple1[4])
print(as.character(games$Date))
print(g)
print(j)
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello H")
data7[j, "team_name"] = data8[game, "Home.Team"]
print("World H")
# DGWH = rbind(DGWH, data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
}
}
# sort according to GW, home = opp team, away = team
else{
tuple1 = tuple0[c(1, 3, 2, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Home.Team == as.character(tuple1[2]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index,  "Away.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello A")
data7[j, "team_name"] = data8[game,  "Away.Team"]
print("World A")
# DGWA = rbind(DGWA,  data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
break
}
}
}
for (j in 1:nrow(data7)) {
tuple0 = data7[j, c(4:6, 58, 33)]
tuple1 = rep(NA, 3)
# sort according to GW, home = team, away = opp team
if(tuple0$was_home == T){
tuple1 = tuple0[c(1:3, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Away.Team == as.character(tuple1[3]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index, "Home.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
g = as.vecter(tuple1[4])
print(as.character(games$Date))
print(g)
print(j)
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello H")
data7[j, "team_name"] = data8[game, "Home.Team"]
print("World H")
# DGWH = rbind(DGWH, data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
}
}
# sort according to GW, home = opp team, away = team
else{
tuple1 = tuple0[c(1, 3, 2, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Home.Team == as.character(tuple1[2]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index,  "Away.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello A")
data7[j, "team_name"] = data8[game,  "Away.Team"]
print("World A")
# DGWA = rbind(DGWA,  data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
break
}
}
}
for (j in 1:nrow(data7)) {
tuple0 = data7[j, c(4:6, 58, 33)]
tuple1 = rep(NA, 3)
# sort according to GW, home = team, away = opp team
if(tuple0$was_home == T){
tuple1 = tuple0[c(1:3, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Away.Team == as.character(tuple1[3]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index, "Home.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
g = as.vector(tuple1[4])
print(as.character(games$Date))
print(g)
print(j)
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello H")
data7[j, "team_name"] = data8[game, "Home.Team"]
print("World H")
# DGWH = rbind(DGWH, data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
}
}
# sort according to GW, home = opp team, away = team
else{
tuple1 = tuple0[c(1, 3, 2, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Home.Team == as.character(tuple1[2]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index,  "Away.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello A")
data7[j, "team_name"] = data8[game,  "Away.Team"]
print("World A")
# DGWA = rbind(DGWA,  data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
break
}
}
}
for (j in 1:nrow(data7)) {
tuple0 = data7[j, c(4:6, 58, 33)]
tuple1 = rep(NA, 3)
# sort according to GW, home = team, away = opp team
if(tuple0$was_home == T){
tuple1 = tuple0[c(1:3, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Away.Team == as.character(tuple1[3]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index, "Home.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
g = as.vector(tuple1[4])
print(as.character(games$Date))
print(g[1])
print(j)
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello H")
data7[j, "team_name"] = data8[game, "Home.Team"]
print("World H")
# DGWH = rbind(DGWH, data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
}
}
# sort according to GW, home = opp team, away = team
else{
tuple1 = tuple0[c(1, 3, 2, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Home.Team == as.character(tuple1[2]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index,  "Away.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello A")
data7[j, "team_name"] = data8[game,  "Away.Team"]
print("World A")
# DGWA = rbind(DGWA,  data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
break
}
}
}
for (j in 1:nrow(data7)) {
tuple0 = data7[j, c(4:6, 58, 33)]
tuple1 = rep(NA, 3)
# sort according to GW, home = team, away = opp team
if(tuple0$was_home == T){
tuple1 = tuple0[c(1:3, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Away.Team == as.character(tuple1[3]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index, "Home.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
g = as.matrix(tuple1[4])
print(as.character(games$Date))
print(g[1, 1])
print(j)
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello H")
data7[j, "team_name"] = data8[game, "Home.Team"]
print("World H")
# DGWH = rbind(DGWH, data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
}
}
# sort according to GW, home = opp team, away = team
else{
tuple1 = tuple0[c(1, 3, 2, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Home.Team == as.character(tuple1[2]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index,  "Away.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
game = which(as.character(games$Date) == as.character(unlist(tuple1[4])))
print("Hello A")
data7[j, "team_name"] = data8[game,  "Away.Team"]
print("World A")
# DGWA = rbind(DGWA,  data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
break
}
}
}
for (j in 1:nrow(data7)) {
tuple0 = data7[j, c(4:6, 58, 33)]
tuple1 = rep(NA, 3)
# sort according to GW, home = team, away = opp team
if(tuple0$was_home == T){
tuple1 = tuple0[c(1:3, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Away.Team == as.character(tuple1[3]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index, "Home.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
game = which(as.character(games$Date) == as.matrix(tuple1[4])[1, 1])
data7[j, "team_name"] = games[game, "Home.Team"]
# DGWH = rbind(DGWH, data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
}
}
# sort according to GW, home = opp team, away = team
else{
tuple1 = tuple0[c(1, 3, 2, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Home.Team == as.character(tuple1[2]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index,  "Away.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
game = which(as.character(games$Date) == as.matrix(tuple1[4])[1, 1])
data7[j, "team_name"] = games[game,  "Away.Team"]
# DGWA = rbind(DGWA,  data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
break
}
}
}
View(data8)
data7[data7$GW == 34 & data7$opp_team_name == "Man Utd"]
View(data7[data7$GW == 34 & data7$opp_team_name == "Man Utd",])
data9 = data7 %>% select(season, name, element_type, GW, team_name, opp_team_name, team_h_score, team_a_score, everything()) %>% arrange(GW, team_name, element)
library(dplyr)
data9 = data7 %>% select(season, name, element_type, GW, team_name, opp_team_name, team_h_score, team_a_score, everything()) %>% arrange(GW, team_name, element)
write.xlsx(data9, "draft 2016-17.xlsx")
library(openxlsx)
write.xlsx(data9, "draft 2016-17.xlsx")
data9 = data7 %>% select(season, name, element_type, GW, team_name, opp_team_name, team_h_score, team_a_score, everything()) %>% arrange(GW, team_name, opp_team_name, element)
write.xlsx(data9, "draft 2016-17.xlsx")
DGWH = DGWA = data.frame()
for (j in 1:nrow(data7)) {
tuple0 = data7[j, c(4:6, 58, 33)]
tuple1 = rep(NA, 3)
# sort according to GW, home = team, away = opp team((accurate))
if(tuple0$was_home == T){
tuple1 = tuple0[c(1:3, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Away.Team == as.character(tuple1[3]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index, "Home.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
game = which(as.character(games$Date) == as.matrix(tuple1[4])[1, 1])
data7[j, "team_name"] = games[game, "Home.Team"]
DGWH = rbind(DGWH, data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
}
}
# sort according to GW, home = opp team(accurate), away = team
else{
tuple1 = tuple0[c(1, 3, 2, 5)]
index = which(data8$Round.Number == as.numeric(tuple1[1]) &
data8$Home.Team == as.character(tuple1[2]))
# SGW detection
if(length(index) == 1){
data7[j, "team_name"] = data8[index,  "Away.Team"]
}
# DGW detection
else if(length(index) > 1){
games = data8[index, ]
game = which(as.character(games$Date) == as.matrix(tuple1[4])[1, 1])
data7[j, "team_name"] = games[game,  "Away.Team"]
DGWA = rbind(DGWA,  data8[index, ])
}
# error detection
else if(length(index) == 0){
print(j)
print("Hold up")
break
}
}
}
unique.data.frame(DGWA)
unique.data.frame(DGWH)
rm(g)
